#!/bin/sh

#Sergey added i2c chip on VIP4G board
#i2c address 0x30
#register 4 for temperature
#register 9 for voltage high byte
#register 10 for voltage low byte
#register 7 for shutdown board
#register 8 for cancel shutdown

tempCmd=0
voltCmd=0
shutdownCmd=0
cshutdownCmd=0
udelay=0
delay=0
printUage()
{
	echo 
	echo "Usage : i2ctest <option> <command> <command_arguments>"
	echo "Options:"
	echo " -h|--help" $'\t' "Describes the usages"
	echo "Commands:"
	echo " --temp" $'\t' "test temperature with <command arguments> -udelay"
	echo " --volt" $'\t' "test voltage with <command arguments> -udelay"
	echo " --shutdown" $'\t' "shutdown system with <command arguments> -delay"
	echo " --cshutdown" $'\t' "cancel shutdown system"
	echo "Examples:"
	echo "	i2ctest --temp -udelay=100000 "
	echo "	i2ctest --volt -udelay=100000 "
	echo "	i2ctest --shutdown -delay=10 "
	echo "	i2ctest --cshutdown "
}

test_temp()
{
	local interval="$1"
	i2cset -y 0 0x30 4
	usleep $interval
	hex_temp=$(i2cget -y 0 0x30)
	dec_temp=$(printf "%d\n" $hex_temp)
	echo "I2C get temperature $dec_temp"
}

test_volt()
{
	local interval="$1"
	i2cset -y 0 0x30 9
	usleep $interval
	hi_vo=$(i2cget -y 0 0x30 )
	usleep $interval
	i2cset -y 0 0x30 10
	usleep $interval
	lo_vo=$(i2cget -y 0 0x30)
	usleep $interval
	
	hex_vo=$hi_vo$(echo $lo_vo|cut -c 3-4)
	dec_mvo=$(printf "%d\n" $hex_vo)
	dec_vo=$(echo $dec_mvo |awk '{print $1/1000}')
	echo "I2C get voltage $hi_vo and $lo_vo and dec= $dec_vo"
}

test_shutdown()
{
	local interval="$1"
	i2cset -y 0 0x30 7 $interval
	echo "I2C will shutdown system in $interval seconds"
}

test_cancelshd()
{
	i2cset -y 0 0x30 8
	echo "I2C cancelled system shutdown command"
}


while [ $# -gt 0 ];do
	case $1 in
	--temp)
		tempCmd=1
	;;
	--volt)
		voltCmd=1
	;;
	--shutdown)
		shutdownCmd=1
	;;
	--cshutdown)
		cshutdownCmd=1
	;;
	-h|--help)
		printUage
		exit 0
		;;
	-udelay*)
		if echo $1 |grep '=' >/dev/null; then
			udelay=`echo $1|sed 's/^.*=//'`
		else
			udelay="$2"
			shift
		fi
		;;
	-delay*)
		if echo $1 |grep '=' >/dev/null; then
			delay=`echo $1|sed 's/^.*=//'`
		else
			delay="$2"
			shift
		fi
		;;
	esac
	shift
done

if [ $tempCmd -eq 1 ];then
	while true; do
		test_temp $udelay
	done
elif [ $voltCmd -eq 1 ];then
	while true; do
		test_volt $udelay
	done

elif [ $shutdownCmd -eq 1 ];then
	test_shutdown $delay

elif [ $cshutdownCmd -eq 1 ];then
	test_cancelshd
else
	echo "No command Specitied, try --help"
fi



