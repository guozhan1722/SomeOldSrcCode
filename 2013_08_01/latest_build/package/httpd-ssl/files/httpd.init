#!/bin/sh /etc/rc.common
#
START=51

bin="httpd"
run_dir="/var/run"
pid_http="$run_dir/$bin-http.pid"
pid_https="$run_dir/$bin-https.pid"
cgi_pattern="cgi-bin/**|**.sh|**.cgi"
user="root"
cert_file="/etc/$bin.pem"

start() 
{

	# kill httpd if for some reason it hasn't been disabled
	# postinst should have stopped and disabled it, but let's be doubly sure
	rc_httpd=$(ls /etc/rc.d/*httpd 2>/dev/null)
	if [ -n ${rc_httpd} ] ; then
		/etc/init.d/httpd stop 2>/dev/null
	fi

	# Generate /etc/htpasswd from root password
	root_pass=$(cat /etc/passwd | awk 'BEGIN {FS=":"} $0~/^root\:/ { print $2 }' 2>/dev/null )
	admin_pass=$(cat /etc/passwd | awk 'BEGIN {FS=":"} $0~/^admin\:/ { print $2 }' 2>/dev/null )
	tmp_path="/tmp/htpasswd" 
	real_path="/etc/htpasswd" 
	echo "root:$root_pass" >  "$tmp_path"
	echo "admin:$admin_pass"  >> "$tmp_path"
	if [ -e "$real_path" ] ; then
		old_md5=$(md5sum "$real_path" | awk ' { print $1 ; }')
		new_md5=$(md5sum "$tmp_path" | awk ' { print $1 ; }')
		if [ "$old_md5" = "$new_md5" ] ; then
			rm "$tmp_path" 2>/dev/null
		else
			mv "$tmp_path" "$real_path"  2>/dev/null
		fi
	else
		mv "$tmp_path" "$real_path"  2>/dev/null
	fi

	#load config options 
	config_load "httpd"

	config_get web_protocol "server" web_protocol
	config_get http_port "server" http_port
	config_get https_port "server" https_port
	config_get web_root "server" web_root
	config_get default_page_file "server" default_page_file
	config_get default_realm_name "server" default_realm_name
	config_get default_realm_password_file "server" default_realm_password_file
	config_get no_password "server" no_password

	if [ -z "$web_protocol" ] ; then web_protocol="https" ; fi
	if [ -z "$http_port" ] ; then http_port=80 ; fi
	if [ -z "$https_port" ] ; then https_port=443 ; fi
	if [ -z "$web_root" ] ; then web_root="/www" ; fi
	if [ -z "$default_page_file" ] ; then default_page_file="index.html" ; fi
	if [ -z "$default_realm_name" ] ; then default_realm_name="IPx21" ; fi
	if [ -z "$default_realm_password_file" ] ; then default_realm_password_file="/etc/htpasswd" ; fi


	if ! [ -d "$run_dir" ] ; then
	       	mkdir -p "$run_dir" 2>/dev/null
	fi
	if ! [ -d "$web_root" ] ; then
		mkdir -p "$web_root" 2>/dev/null
	fi


	## start with ssl
	if [ "$web_protocol" = "https" ] || [ "$web_protocol" = "both" ] ; then
		if [ -n "$no_password" ] ; then
			$bin -c "$cgi_pattern" -d "$web_root" -u "$user" -p "$https_port" -S -E "$cert_file" -i "$pid_https" -DPF "$default_page_file"  2>/dev/null
		else
			$bin -c "$cgi_pattern" -d "$web_root" -u "$user" -p "$https_port" -S -E "$cert_file" -i "$pid_https" -DPF "$default_page_file" -DRN "$default_realm_name" -DRP "$default_realm_password_file"  2>/dev/null
			
		fi
	fi

	## start without ssl
	if [ "$web_protocol" = "http" ] || [ "$web_protocol" = "both" ] ; then
		if [ -n "$no_password" ] ; then
			$bin  -c "$cgi_pattern" -d "$web_root" -u "$user" -p "$http_port" -i "$pid_http" -DPF "$default_page_file"  2>/dev/null

		else
			$bin  -c "$cgi_pattern" -d "$web_root" -u "$user" -p "$http_port" -i "$pid_http" -DPF "$default_page_file" -DRN "$default_realm_name" -DRP "$default_realm_password_file"  2>/dev/null
		fi
	fi
}	

stop()
{
	if [ -f $pid_http ] ; then
		kill $(cat $pid_http) 2>/dev/null
		rm -rf $pid_httpd
	fi

	if [ -f $pid_https ] ; then
		kill $(cat $pid_https) 2>/dev/null
		rm -rf $pid_https
	fi
}

